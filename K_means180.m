%% 设置地面大小和高度
ground_size = [500, 500];%长1000米 宽1000米
ground_height = 100;%空间高100米
%% 随机生成180个地面用户的位置
user_num = 180;
%   user_pos = (rand(2, user_num) .* repmat([ground_size]', 1, user_num))';%随机生成140个坐标 然后转置
user_pos =[203.453203369476,399.202760871549;216.492910532620,70.6845625312699;0,0;491.316483315028,33.7559690877477;213.688632289930,3.88865679850819;457.999481804510,443.958864477848;466.551036687393,344.778487935258;221.542506467900,73.0213027256252;471.965748292042,220.665495316619;126.402177520705,169.266359720216;8.66566313590300,428.887218106513;130.838765967004,273.850629293284;126.020785867373,368.428948514595;498.647232738564,403.761111939250;338.324826397821,392.853513350505;440.049132945175,373.538935849475;153.021093045984,268.425979761060;88.0773292526860,442.362540895186;234.739346313327,6.78883902204336;167.564488934428,489.315541547202;190.131383947440,276.673705942300;497.601719731935,452.575987243711;226.404004911781,125.146738132254;97.4026892029480,3.20431540565214;223.265072873545,325.785085485668;427.296375067245,324.811769573341;185.906883312598,317.154298435209;478.533556057755,360.913033502596;188.484757821759,90.9601154612951;402.097412722948,32.8520381390858;53.2844978731114,390.275427045838;168.218418815939,180.206871747871;161.501899189395,117.247966647406;242.834034702401,308.698784531195;451.355784673218,131.484540928163;261.632706057675,481.156239511224;160.209680343035,1.86881085840368;333.967079720513,93.1028831578552;234.509553500498,235.802503159964;134.390033339671,37.0577705216892;322.062357775224,145.831416847303;244.639740027756,444.828582679687;333.540159757820,242.334058862768;93.2418430777435,477.986720285538;177.382431597049,363.240055734742;484.278044485941,57.1128806207495;292.434524574153,202.406156254980;467.871842281173,296.509704552214;399.372703665352,86.5756508367678;244.433806116344,475.602610257022;6.01191766782316,484.325762586579;197.938982953535,377.426584902144;61.7941413705955,443.508012039125;408.991654887323,377.125361139758;261.017068292681,441.293624553778;348.372106280084,421.805811163442;136.718753888336,301.771488466393;358.232211894855,378.725806085100;58.7844044498682,362.324142744030;189.190841220418,254.666253216613;489.179104922376,126.854528594395;300.587807414461,63.6437419619265;446.091848096388,464.929272886337;479.887302255753,40.9474363740075;138.214184659772,485.392431026587;122.163457460653,453.054126346504;114.316250247985,309.008662331604;194.441632344121,411.151455615718;70.8470018127838,303.485551635978;380.001087802053,275.767096344484;157.839998226680,3.34964469132737;218.275477657896,379.716813456991;288.097003883983,242.933484494229;415.370969582757,60.1611752840427;441.254870684855,94.6962306122280;482.388245639879,337.111230434381;60.2720667497205,127.254140029921;282.281514926301,348.249696419162;151.186675658171,136.254430509429;317.929426966464,467.960460263228;168.517003793758,317.806813004932;24.6449411328552,378.922150040113;3.48680896036796,377.642098758991;228.311523619814,212.575744539597;138.057774248234,93.5346789089915;40.5470497489650,88.4964513322927;293.220208242792,361.640372241650;383.904657319794,384.924566422979;76.0380818091239,316.425525284752;359.886795745969,414.322759883814;97.1992350951659,133.295843431808;231.740419859641,459.079643467150;326.953913035177,461.799405188815;175.609661439945,287.140297976871;259.283574629048,296.725701956694;265.736178201066,269.967380113520;32.1072596358785,449.217108496031;184.694340263529,411.865271259685;250.326156489224,231.842633783572;67.2246042476034,2.32878999716252;456.085146261101,9.58604271738528;228.600980913721,39.7779215398146;186.470097090645,30.3856640122036;385.154993165343,394.760144359279;496.462171515513,17.7978037990839;101.212164498690,301.210129117113;133.493427835053,474.168970647435;444.180936522569,320.386572356780;188.275216380105,431.051704247173;15.3935979558744,17.2973360876088;61.5934305080511,116.374309198822;403.160355833461,235.434628818020;234.774842942019,263.286699701611;473.292378776096,175.585065053251;293.035897332311,454.921299690379;328.348410936860,188.976828787090;342.324967101248,90.7251184451976;87.2446529306902,173.300305511320;114.815431841402,403.869055728424;432.934641385694,116.750634950901;276.552633635188,277.173723839986;325.080306969707,450.136358627591;259.309936344674,274.431351066977;65.2693472946424,76.8563970661241;75.1278352620952,125.195200238557;75.6289068604473,167.759722395320;208.193322769730,233.118630576161;20.0547006425910,46.1376906001764;486.054493141981,130.326150793808;308.345403376313,2.44072049714494;163.821403738131,75.6965234550709;166.869132441930,393.989298005042;30.0255937080090,157.619786906991;229.457797707044,466.449688353612;308.207150603918,174.041094965384;434.115328720882,438.239244705143;311.691027512358,136.835218000095;173.077290480729,484.982776890413;183.982253301876,98.1805043876189;156.299521754293,135.696332774554;480.207057577560,420.571367578511;111.154236634788,169.418131290340;170.605878243194,449.513288915080;373.717593723864,316.463906374499;457.528512164693,494.755716617717;450.664761926509,233.719965137735;293.811635618660,342.656768998046;417.194689361748,38.0298510133506;437.030774534428,202.471524498787;78.1573210264379,322.445049581310;22.7191170018976,204.938156008532;109.083514052589,428.328041368379;53.1210926981979,371.336306327330;259.600303577830,460.202360691097;115.958514159340,267.605550452308;496.328270007659,452.750260854556;358.292157892257,43.5500829260804;457.382707592291,307.059851132686;150.909966842088,71.9735932734995;27.7425508563022,351.348767582400;33.4231828528275,188.300840284110;408.079710997860,385.891462143706;286.731527489077,116.003499250460;371.428947221357,262.341174955730;212.546033391809,191.287675877833;111.044576124207,470.438707830878;142.837210806207,315.952050892879;182.098691628320,450.836836380608;395.189988364117,95.9776266275483;105.434844028589,139.116317196610;150.050313025442,463.966362550775;193.793758982965,448.252845549858;117.672369482624,39.9837030809780;216.883506601467,253.133059189780;473.588734092378,104.562192071142;402.067669828424,428.104634372796;244.333655727099,420.578023542447;94.0926361889755,118.437507743986;76.2160755186156,221.329930936546;70.0436848902847,447.964505757065];%固定180个用户坐标点
user_pos(3,:)=0; %用户高为0         
%% 用户优先级模型  用户第4列
i = user_num;
EimaxlowerLimit = 1.17;  %wh 
EimaxupperLimit = 3.5;     %wh
Eimax = [EimaxlowerLimit + (EimaxupperLimit- EimaxlowerLimit) * rand(1, i)]';%用户最大能量
%随机生成的一组固定值
Eimax= round(Eimax, 2);%保留两位小数
Eimax=[2.39000000000000;3;3.46000000000000;3.23000000000000;2.76000000000000;2.68000000000000;3.14000000000000;2.41000000000000;2.73000000000000;1.91000000000000;2.64000000000000;2.01000000000000;1.95000000000000;2.19000000000000;1.96000000000000;2.90000000000000;1.74000000000000;2.14000000000000;2.07000000000000;2.37000000000000;3.20000000000000;3.49000000000000;1.55000000000000;2.96000000000000;2.73000000000000;1.83000000000000;3.27000000000000;2.72000000000000;1.48000000000000;2.71000000000000;2.37000000000000;2.04000000000000;2.52000000000000;2.30000000000000;3.08000000000000;2.08000000000000;1.97000000000000;2;1.57000000000000;1.44000000000000;2.40000000000000;3.13000000000000;1.92000000000000;2.42000000000000;2.71000000000000;1.51000000000000;2.35000000000000;3.33000000000000;3.24000000000000;3.36000000000000;1.40000000000000;1.49000000000000;2.34000000000000;1.53000000000000;2.77000000000000;2.77000000000000;1.91000000000000;2.55000000000000;1.33000000000000;3.30000000000000;1.90000000000000;2.26000000000000;1.31000000000000;2.02000000000000;2.49000000000000;3.20000000000000;2.76000000000000;1.44000000000000;2.41000000000000;3.33000000000000;1.63000000000000;2.72000000000000;2.25000000000000;1.59000000000000;2.37000000000000;2.09000000000000;3.18000000000000;1.81000000000000;2.43000000000000;2.09000000000000;1.59000000000000;2.20000000000000;1.37000000000000;1.87000000000000;2.85000000000000;2.30000000000000;3.40000000000000;3.14000000000000;1.45000000000000;2.08000000000000;2.09000000000000;1.35000000000000;2.66000000000000;2.63000000000000;1.57000000000000;2.97000000000000;2.22000000000000;2.82000000000000;3.03000000000000;2.29000000000000;1.44000000000000;2.27000000000000;2.74000000000000;2.76000000000000;2.77000000000000;2.04000000000000;3.30000000000000;3.48000000000000;2.17000000000000;3.46000000000000;3.29000000000000;2.50000000000000;3.35000000000000;1.63000000000000;3.39000000000000;2.62000000000000;2.16000000000000;3.47000000000000;1.56000000000000;2.31000000000000;1.90000000000000;2.69000000000000;2.69000000000000;3.30000000000000;1.18000000000000;3.07000000000000;2.74000000000000;2.61000000000000;2.46000000000000;1.33000000000000;2.54000000000000;1.86000000000000;2.65000000000000;2.12000000000000;2.72000000000000;2.45000000000000;1.63000000000000;1.35000000000000;1.77000000000000;1.18000000000000;2.25000000000000;2.40000000000000;1.20000000000000;2.93000000000000;1.91000000000000;1.89000000000000;1.40000000000000;1.46000000000000;2.81000000000000;3.39000000000000;1.47000000000000;1.62000000000000;1.22000000000000;2.67000000000000;1.27000000000000;1.70000000000000;2.16000000000000;1.78000000000000;3.30000000000000;3.01000000000000;3.05000000000000;1.82000000000000;2.96000000000000;2.07000000000000;2.06000000000000;1.74000000000000;3.09000000000000;1.99000000000000;2.05000000000000;2.54000000000000;2.96000000000000;3.15000000000000;2.64000000000000;2.26000000000000;3.04000000000000;3.29000000000000;1.28000000000000;2.57000000000000;1.50000000000000;3.08000000000000];
betailowerLimit=1;
betaiupperLimit=3;
betai=[betailowerLimit + (betaiupperLimit- betailowerLimit) * rand(1, i)]';%延迟容忍度
%随机生成的一组固定值
betai= round(betai, 2);%保留两位小数
betai=[2.45000000000000;1.37000000000000;1.46000000000000;1.67000000000000;2.65000000000000;2.39000000000000;2.83000000000000;1.30000000000000;1.46000000000000;1.45000000000000;1.04000000000000;1.12000000000000;2.73000000000000;1.19000000000000;2.65000000000000;1.82000000000000;1.40000000000000;1.35000000000000;1.85000000000000;1.27000000000000;1.16000000000000;1.71000000000000;2.46000000000000;1.29000000000000;2.03000000000000;1.10000000000000;2.78000000000000;1.38000000000000;1.72000000000000;2.05000000000000;1.19000000000000;1.82000000000000;1.44000000000000;2.61000000000000;2.77000000000000;1.79000000000000;1.18000000000000;1.37000000000000;1.65000000000000;2.16000000000000;2.47000000000000;1.37000000000000;1.33000000000000;2.26000000000000;2.30000000000000;1.02000000000000;1.88000000000000;2.96000000000000;2.80000000000000;2.68000000000000;1.46000000000000;2.51000000000000;2.88000000000000;2;1.06000000000000;2.49000000000000;2.81000000000000;1.11000000000000;2.51000000000000;3;2.46000000000000;1.12000000000000;1.86000000000000;1.21000000000000;2;2.88000000000000;2.75000000000000;1.29000000000000;1.11000000000000;1.99000000000000;1.66000000000000;1.03000000000000;2.84000000000000;2.99000000000000;1.74000000000000;2.30000000000000;1.68000000000000;1.34000000000000;1.77000000000000;1.52000000000000;2.25000000000000;1.29000000000000;2.32000000000000;2.30000000000000;2.79000000000000;2.91000000000000;2.15000000000000;1.29000000000000;2.83000000000000;2.82000000000000;2.37000000000000;2.59000000000000;1.96000000000000;1.37000000000000;1.48000000000000;2.58000000000000;1.81000000000000;2.32000000000000;1.15000000000000;1.86000000000000;1.26000000000000;1.79000000000000;1.57000000000000;1.40000000000000;2.45000000000000;1.97000000000000;2.77000000000000;1.51000000000000;1.69000000000000;1.11000000000000;2.22000000000000;1.13000000000000;2.37000000000000;2.92000000000000;2.14000000000000;2.93000000000000;1.05000000000000;2.09000000000000;1.03000000000000;2.37000000000000;2.44000000000000;1.06000000000000;1.34000000000000;1.45000000000000;2.33000000000000;2.50000000000000;2;2.11000000000000;2.21000000000000;1.62000000000000;2.75000000000000;2.12000000000000;2.93000000000000;2.18000000000000;2.69000000000000;1.92000000000000;1.10000000000000;2.78000000000000;2.34000000000000;1.42000000000000;2.34000000000000;1.88000000000000;1;1.28000000000000;2.65000000000000;2.44000000000000;1.26000000000000;1.84000000000000;1.77000000000000;1.38000000000000;2.84000000000000;1.93000000000000;2.63000000000000;1.73000000000000;1.08000000000000;2.99000000000000;2.85000000000000;1.89000000000000;1.81000000000000;2.33000000000000;1.23000000000000;1.15000000000000;2.32000000000000;1.29000000000000;2.56000000000000;2.41000000000000;2.76000000000000;2.53000000000000;2.85000000000000;2.08000000000000;2.86000000000000;2.80000000000000;1.98000000000000;2.48000000000000;2.57000000000000;1.53000000000000;2.33000000000000;1.44000000000000;2.49000000000000;1.74000000000000];
TilowerLimit=10;
TiupperLimit=50;
Ti=[TilowerLimit + (TiupperLimit- TilowerLimit) * rand(1, i)]';%理想可容忍延迟
% 随机生成的一组固定值

Ti= round(Ti, 2);%保留两位小数
Ti=[15.6266576577444;30.8273258214354;38.6164608542133;39.7082111264227;20.0571481858577;42.1129472916644;41.0942959561837;31.1580325052648;16.0363942178745;39.5346200506485;20.6760095694442;43.2947900792274;28.2613009739453;10.7969903943992;40.1759831585487;14.8747401665362;29.3197755286651;48.7733015289017;24.0939678185849;10.7843124140743;36.0820443744385;26.9594791927434;36.6745976960818;40.8577698991812;11.8997992944452;46.4613965556593;20.6850690182958;31.9619200930935;26.4899403695926;15.0597308028413;16.3188675544496;26.3325231300032;36.7222934052161;27.5070643496201;40.8728861890328;39.6153287323066;39.8217163836515;21.1288308229361;13.5500475816931;32.4716604459105;21.5408942507808;24.3216306519241;37.2620011429108;46.3227696291372;36.0230231232398;14.0384535823850;48.2705022099875;44.4864202806376;10.2869404310967;24.0749805896410;15.5441086739580;31.3395720289401;16.5039362284020;11.3102748484845;17.2955728703983;41.4272285921979;42.5724032654976;37.3073037326251;47.7708155453886;30.4439282680028;14.3217101672614;18.9511315789616;36.4690289432785;41.2009856336849;44.4132199022552;10.4723213126952;19.3286225592596;23.7072539399842;28.7084487090345;46.7947557126064;46.0546967283168;18.2875655124924;26.1166887551993;24.0132158702156;49.4962578343475;34.2309769853671;11.0282632403324;26.1823595198057;28.4314130617752;35.3100063903655;24.6554627832681;28.8459488193951;18.9247916162357;38.4366289043227;37.9680875646991;23.0349992702964;35.5010745796776;31.0155944278442;48.7979155132270;15.2239695397936;13.0095124339890;31.1829769954413;39.6799364248033;12.6503235084639;27.3355285205906;25.8099331332928;32.6656886436064;32.1799434347236;44.0142691858902;13.2344792764548;38.2762222634630;34.8542229816552;42.8897755268585;18.1401455226109;21.7664463476388;35.0986206995207;13.8047602499745;37.8590392072146;34.1431408979744;19.3839916802729;15.0192471109572;28.0429989310515;43.4382002360117;22.1027571668447;12.3082987122817;41.4198403665934;29.7904654393693;47.9588606779295;32.4226667346763;44.9520052918779;24.5496841631523;20.6224369100903;23.2170662262983;13.6620342823469;31.9428931163379;38.1702600057653;47.9213536261383;20.0441119397235;24.2394152379831;28.9844891083002;21.1877831967569;46.7474186872797;37.1015506245746;26.7233691245871;18.1579772069444;16.7912589694756;18.1705131460096;28.8275297160091;32.6192646674754;30.7232808197480;20.6606842743153;29.0418979997504;31.5918526737967;26.3110316172301;44.9013729257746;47.1480661520475;35.4700076075136;49.1264211561370;30.6620521520618;40.2763061602307;35.9300434324153;33.4254435858278;33.5343229696014;44.5614299177966;43.6013138940571;39.6526154901436;46.4243442932516;26.4511438669699;48.4379700014970;28.1399660801070;26.0772396006656;10.8715122908165;16.0740540655883;36.2673913313913;44.4279670853656;42.8450384709836;28.3610414605377;49.0881619735554;16.0119603952191;49.9964400681295;31.4774749248049;31.4896408522809;39.8346086675419;22.9162364552046;30.2892991049615;23.5305685876658;35.8655414494966;49.8083144824600;22.7483863039213;37.4607078121690];

TlowerLimit=100;
TupperLimit=300;
T=[TlowerLimit + (TupperLimit- TlowerLimit) * rand(1, i)]'; %服务期持续时间
%随机生成的一组固定值
T= round(T, 2);%保留两位小数 
T=[153;243.900000000000;249.800000000000;260.170000000000;232.310000000000;122.780000000000;279.150000000000;159.850000000000;149.370000000000;176.020000000000;237.870000000000;250.390000000000;295.370000000000;258.480000000000;135.680000000000;163.110000000000;263.440000000000;185.260000000000;296.680000000000;108.200000000000;195.320000000000;273.620000000000;192.790000000000;249.100000000000;232.280000000000;188.170000000000;163;266.440000000000;202.130000000000;245.230000000000;295.630000000000;193.650000000000;163.520000000000;251.770000000000;136.020000000000;295.620000000000;123.660000000000;277.510000000000;290.890000000000;153.190000000000;119.640000000000;143.340000000000;201.400000000000;286.900000000000;235.560000000000;223.470000000000;151.590000000000;205.250000000000;128.400000000000;290.680000000000;120.450000000000;223.100000000000;185.090000000000;129.400000000000;248.810000000000;113.150000000000;165.040000000000;204.550000000000;176.760000000000;205.210000000000;244.530000000000;224.930000000000;211.330000000000;187.160000000000;247.770000000000;180.630000000000;122.430000000000;123.620000000000;127.860000000000;112.810000000000;269.440000000000;111.760000000000;109.490000000000;293.160000000000;218.930000000000;216.380000000000;206.140000000000;258.850000000000;199.990000000000;247.930000000000;134.850000000000;179.150000000000;245.570000000000;176.950000000000;244.190000000000;131.370000000000;175.440000000000;137.540000000000;211.440000000000;156.510000000000;266.200000000000;258.780000000000;108.040000000000;172.220000000000;202.910000000000;284.740000000000;122.140000000000;288.350000000000;191.770000000000;256.950000000000;142.480000000000;113.620000000000;299.710000000000;278.420000000000;214.750000000000;150.390000000000;262.910000000000;145.080000000000;221.010000000000;295.470000000000;196.890000000000;266.540000000000;202.010000000000;139.400000000000;126.780000000000;175.210000000000;271.950000000000;157.740000000000;219.930000000000;171.150000000000;138.860000000000;135.510000000000;257.710000000000;240.830000000000;290.040000000000;129.560000000000;277.840000000000;125.750000000000;256.140000000000;294.320000000000;119.860000000000;196.470000000000;242.330000000000;114.170000000000;251.490000000000;160.950000000000;166.760000000000;177.750000000000;288.050000000000;120.960000000000;248.310000000000;216.900000000000;180.860000000000;230.030000000000;102.060000000000;105.230000000000;193.110000000000;119.320000000000;137.660000000000;109.990000000000;269.930000000000;144.280000000000;193.250000000000;167.240000000000;197.600000000000;262.900000000000;288.760000000000;131.740000000000;249;192.490000000000;231.150000000000;262.060000000000;224.290000000000;292.910000000000;189.600000000000;284.380000000000;191.460000000000;280.770000000000;239.560000000000;230.570000000000;265.910000000000;166.970000000000;117.360000000000;250.710000000000;237.320000000000;142;289.250000000000;266.230000000000;160.650000000000;161.610000000000];
Eir=zeros(i, 1);
for j = 1:i
    lowerLimit = 0;
    upperLimit = Eimax(j);
    Eir(j) =lowerLimit + (upperLimit - lowerLimit) * rand;%用户剩余能量
end
%随机生成的一组固定值

Eir= round( Eir, 2);%保留两位小数
Eir=[2.31000000000000;2.19000000000000;1.45000000000000;0.980000000000000;0.920000000000000;1.53000000000000;0.730000000000000;2.25000000000000;0.130000000000000;1.07000000000000;1.35000000000000;1.05000000000000;0.940000000000000;0.830000000000000;1.33000000000000;0.250000000000000;0.730000000000000;1.60000000000000;1.09000000000000;2.12000000000000;2.98000000000000;0.510000000000000;0.230000000000000;0.990000000000000;0.740000000000000;0.810000000000000;1.23000000000000;0.370000000000000;0.840000000000000;2.11000000000000;1.33000000000000;0.240000000000000;0.630000000000000;0.110000000000000;1.30000000000000;1.93000000000000;1.13000000000000;0.470000000000000;0.210000000000000;0.720000000000000;0.990000000000000;0.500000000000000;0.550000000000000;0.330000000000000;0.860000000000000;0.670000000000000;1.06000000000000;3.10000000000000;2.26000000000000;0.110000000000000;0.140000000000000;0.930000000000000;0.800000000000000;0.630000000000000;2.13000000000000;2.73000000000000;0.880000000000000;1.20000000000000;0.200000000000000;3.18000000000000;0.380000000000000;0.600000000000000;0.180000000000000;0.720000000000000;0.200000000000000;0.470000000000000;2.67000000000000;1.17000000000000;2.39000000000000;0.140000000000000;1.42000000000000;0.330000000000000;0.420000000000000;0.900000000000000;1.85000000000000;0.430000000000000;2.63000000000000;1.29000000000000;0.510000000000000;0.750000000000000;0.510000000000000;0.720000000000000;1.05000000000000;0.490000000000000;2.58000000000000;0.900000000000000;1;2.76000000000000;0.700000000000000;1.16000000000000;0.720000000000000;0.930000000000000;1.32000000000000;2.08000000000000;0.600000000000000;2.26000000000000;1.75000000000000;2.30000000000000;2.97000000000000;0.170000000000000;1.04000000000000;1.66000000000000;1.69000000000000;1.37000000000000;0.0900000000000000;1.90000000000000;3.18000000000000;1.63000000000000;1.86000000000000;0.900000000000000;2.06000000000000;1.17000000000000;0.560000000000000;1.11000000000000;1.62000000000000;1.29000000000000;1.18000000000000;0.820000000000000;0.390000000000000;0.800000000000000;1.08000000000000;0.920000000000000;1.26000000000000;2.11000000000000;0.0700000000000000;0.590000000000000;1.19000000000000;2.01000000000000;1.87000000000000;0.850000000000000;1.84000000000000;0.220000000000000;2.09000000000000;1.11000000000000;2.18000000000000;1.30000000000000;0.410000000000000;0.170000000000000;0.410000000000000;0.720000000000000;1;0.530000000000000;0.460000000000000;2.48000000000000;0.560000000000000;1.14000000000000;0.760000000000000;1.45000000000000;2.35000000000000;0.460000000000000;0.370000000000000;0.370000000000000;0.660000000000000;0.100000000000000;1.15000000000000;1.28000000000000;0.0700000000000000;0.470000000000000;0.900000000000000;2.54000000000000;0.550000000000000;0.770000000000000;0.600000000000000;0.700000000000000;1.35000000000000;1.56000000000000;2.88000000000000;1.54000000000000;0.910000000000000;1.95000000000000;2.45000000000000;1.13000000000000;0.0400000000000000;0.620000000000000;2.86000000000000;1.29000000000000;0.630000000000000;1.57000000000000;0.860000000000000;2.60000000000000];
%计算每个用户的优先级
faie=0.5;
fait=0.5;
for j=1:i
detai(j)=faie*exp(-Eir(j)/Eimax(j))+fait*exp(-betai(j)*Ti(i)/T(j));%每个用户优先级
user_pos(j,4)=detai(j);%用户优先级存在用户第4列 数越小优先级越高
end
user_pos = sortrows(user_pos, 4); 
%% k-means++ 第一步即选取一个初始的聚类中心。

data = user_pos(:,1:2);
[num_rows, num_columns] = size(data);
num_clusters = 12;% 设置聚类的个数
K=num_clusters;%簇的个数 总区域个数
% center_indices = randi(num_rows, 1, 1);
% distances = sum((data - data(center_indices,:)).^2, 2);

% for i = 2:num_clusters
%     min_distances = min(distances, [], 2);
%     probabilities = min_distances / sum(min_distances);
%     center_indices(i) = randsample(num_rows, 1, true, probabilities);  
%     new_distances = sum((data - data(center_indices(i),:)).^2, 2); 
%     distances = min(distances, new_distances);
% end
% 

% for i = 1:user_num
%     user_coord = data(i, 1:2); % 获取用户坐标
%     min_dist = Inf; % 初始化最小距离为无穷大
%     for j = 1:num_clusters
%         dist = norm(user_coord - data(center_indices(j), 1:2));
%         if dist < min_dist
%             min_dist = dist;
%             user_pos(i,5) = j; 
%         end
%     end
% end
% 

%      cluster_features=zeros(num_clusters,4);  % 预设簇的特征集的大小  分别为 X Y 0 优先级

%     for j=1:num_clusters
%          cluster_features(j,1:4) = cluster_features(j,1:4)+ sum(user_pos(user_pos(:,5) == j,1:4),1);
%     end

%     for j=1:num_clusters
%          cluster_features_new(j,1:4) = cluster_features(j,1:4)/size(user_pos(user_pos(:,5) == j),1);
%     end       
%     

% center_coord=data(center_indices,:);%Kmeans++聚类中心坐标
% while ~isequal(center_coord, cluster_features_new(:,1:2))
%     center_coord = cluster_features_new(:,1:2);%
%    
%     for i = 1:user_num
%         user_coord = data(i, 1:2); 
%         min_dist =200; 
%         for j = 1:num_clusters
%             dist = norm(user_coord -center_coord (j,:)) ; 
%             if dist < min_dist
%                 min_dist = dist;
%                 user_pos(i,5) = j; %
%             end
%         end
%     end
%           cluster_features_new=zeros(num_clusters,4);
%        for j = 1:num_clusters
%             cluster_features_new(j,1:4) = cluster_features_new(j,1:4)+ sum(user_pos(user_pos(:,5) == j,1:4),1);
%        end
%        for j = 1:num_clusters   
%             cluster_features_new(j,1:4) = cluster_features_new(j,1:4)/size(user_pos(user_pos(:,5) == j),1);  
%       end  
% end
cluster_features_new=[155.468071736183,47.7322589304011,0;269.987920139144,457.000691402169,0;433.356954855713,282.886262110041,0;350.932755952437,382.086932927949,0;341.878403003079,82.5034542444968,0;160.659742087854,439.225479671299,0;462.651800879413,430.372584547995,0;257.171077100227,241.855653606553,0;139.222257652565,308.024107171235,0;82.9054852387589,143.762736246176,0;463.446772461031,81.2607501357325,0;40.6470243269895,410.676170031600,0];
center_coord=  cluster_features_new(:,1:2);  
user_pos(:,5)=[9;4;1;6;11;5;8;11;3;9;3;4;10;9;12;1;7;3;6;6;1;11;12;2;4;8;10;9;12;6;10;2;8;4;6;11;8;10;5;7;7;1;6;8;2;9;12;8;10;6;6;10;8;6;12;10;2;10;5;11;6;2;9;9;1;11;11;8;1;9;9;9;4;7;6;12;3;11;9;1;8;12;5;1;1;11;3;10;10;4;2;9;10;5;7;7;2;3;10;1;4;1;4;1;8;10;6;8;6;9;10;12;4;6;9;4;8;5;3;12;12;8;8;10;2;1;3;3;9;3;1;9;12;11;11;3;8;2;6;5;1;9;4;11;1;1;11;10;7;10;1;8;1;12;2;6;5;3;7;7;10;6;5;6;6;11;5;8;1;2;3;10;7;5;6;2;10;8;1;7];

newColumn = (1:num_clusters)';
cluster_features_new = [  cluster_features_new , newColumn]; 

newColumn = (1:num_clusters)';
center_coord_1 = [center_coord , newColumn];